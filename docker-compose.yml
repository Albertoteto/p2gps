version: "3"

services:
  # Definimos el servicio de MongoDB
  mongo:
    image: albertoteto/p2gps:db
    deploy:
      replicas: 1  # Para escalabilidad del servicio.
      resources:
        limits:
          cpus: "0.15"
          memory: 200M
      restart_policy:
        condition: on-failure  # Reiniciar el contenedor si falla.
    ports:
      - "28017:28017"  # Mapeo del puerto del contenedor al puerto del host.
      - "27017:27017"
    volumes:
      - "db-data:/data/db"  # Persistencia de datos en el contenedor.

  # Definimos el servicio de Backend (Order Service)
  order:
    image: albertoteto/p2gps:order
    depends_on:
      - "mongo"  # El servicio 'order' depende de 'mongo' para poder iniciarse.
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.3"
          memory: 500M
      restart_policy:
        condition: on-failure
    ports:
      - "8080:8080"  # Exponemos el puerto 8080 en el contenedor.

  # Definimos el servicio de Frontend (Web)
  web:
    image: albertoteto/p2gps:web
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.25"
          memory: 300M
      restart_policy:
        condition: on-failure
    ports:
      - "80:8080"  # Exponemos el puerto 80 en el contenedor y lo mapeamos al 8080.

# Definimos vol√∫menes persistentes
volumes:
  db-data:
